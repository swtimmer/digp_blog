dataset <- read.csv("Feb DS dataset - nosweep tree.csv", header = TRUE)
dim(dataset)
colnames(dataset)
dataset[1:5, 249"251]
""
dataset[1:5, 249:251]
write.csv(dataset[, 249:251], file="ScoredData.csv")
dataset1 <- read.csv("ScoredData.csv", header = TRUE)
dim(dataset1)
colnames(dataset1)
dataset1[1:5,]
write.csv(dataset[, 249:251], file="ScoredData.csv", row.names = FALSE)
dataset1 <- read.csv("ScoredData.csv", header = TRUE)
dataset1[1:5,]
dataset <- read.csv("ScoredData.csv", header = TRUE)
head(dataset)
dim(dataset)
qplot(data = toTest.res, x=F1, y=kappa, geom="point", colour=Threshold)
library(ggplot2)
qplot(data = toTest.res, x=F1, y=kappa, geom="point", colour=Threshold)
```{r kappa}
#some simple code to calculate the Kappa
kappa = function(TP, TN, FP, FN)
{
N = TP+TN+FP+FN
#Probability observed
Po = (TP + TN) / N
#Probability expected
Pe = (((TN+FP) * (TN+FN)) + ((FN+TP) * (FP + TP))) / (N * N)
#Kappa
kappa = (Po - Pe) / (1-Pe)
kappa
}
scoreTreshold = function(threshold, dataset){
n = nrow(dataset)
#make the confusion matrix
index = which(dataset$Scored.Probabilities < threshold)
FN = as.numeric(length(which(dataset$label[index] == 1)))
TN = as.numeric(length(which(dataset$label[index] == 0)))
TP = as.numeric(length(which(dataset$label[-index] == 1)))
FP = as.numeric(length(which(dataset$label[-index] == 0)))
#some generic evaluation metrics
Precision = TP / (TP + FP)
Recall =  TP / (TP + FN)
F1 = (Recall * Precision)/(Recall + Precision)
k = kappa(TP, TN, FP, FN)
accuracy = (TP + TN)/n
#create a data.frame to export from this function
out = data.frame(
Threshold=threshold,N=n, Accuracy = accuracy, TP = TP, TN = TN, FP =  FP, FN = FN,
Precision = Precision,
Recall =  Recall,
F1 = F1,
kappa = k
)
out
}
```
source('~/.active-rstudio-document', echo=TRUE)
